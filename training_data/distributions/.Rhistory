graph <- ggplot()
cov <- cov %>%
select('vowel', 'f1-f1', 'f1-f2', 'f2-f1', 'f2-f2')
for (i in 1:nrow(mu)) {
cov_vals <- matrix(as.numeric(cov[i, 2:ncol(cov)]), ncol=2)
el <- ellipse(cov_vals, centre=matrix(mu[i,] %>% select('f1', 'f2') %>% as.numeric))
graph <- graph + geom_point(data=as_tibble(el), aes(x=y, y=x))
}
graph +
geom_label(data=mu, aes(x=f2, y=f1, label=vowel, color=vowel)) +
scale_x_reverse() +
scale_y_reverse()
}
plot_distributions(en_train_ads_mu, en_train_ads_cov)
el
type(el)
typeof(el)
as_tibble(el)
el <- c()
rbind(el,  ellipse(cov_vals, centre=matrix(mu[i,] %>% select('f1', 'f2') %>% as.numeric)))
v_el <- ellipse(cov_vals, centre=matrix(mu[i,] %>% select('f1', 'f2') %>% as.numeric))
v_el$vowel <- mu[i,]$vowel
v_el <- ellipse(cov_vals, centre=matrix(mu[i,] %>% select('f1', 'f2') %>% as.numeric))
v_el <- as_tibble(v_el)
v_el$vowel <- mu[i,]$vowel
v_el
plot_distributions <- function(mu, cov) {
ggplot(data=mu, aes(x=f2, y=f1, label=vowel)) +
scale_x_reverse() +
scale_y_reverse() +
geom_text()
graph <- ggplot()
cov <- cov %>%
select('vowel', 'f1-f1', 'f1-f2', 'f2-f1', 'f2-f2')
el = c()
for (i in 1:nrow(mu)) {
cov_vals <- matrix(as.numeric(cov[i, 2:ncol(cov)]), ncol=2)
v_el <- ellipse(cov_vals, centre=matrix(mu[i,] %>% select('f1', 'f2') %>% as.numeric))
v_el <- as_tibble(v_el)
v_el$vowel <- mu[i,]$vowel
el <- rbind(el, v_el)
graph <- graph + geom_point(data=as_tibble(el), aes(x=y, y=x))
}
graph +
geom_label(data=mu, aes(x=f2, y=f1, label=vowel, color=vowel)) +
scale_x_reverse() +
scale_y_reverse()
}
mu <- en_train_ads_mu
cov <- en_train_ads_cov
el = c()
for (i in 1:nrow(mu)) {
cov_vals <- matrix(as.numeric(cov[i, 2:ncol(cov)]), ncol=2)
v_el <- ellipse(cov_vals, centre=matrix(mu[i,] %>% select('f1', 'f2') %>% as.numeric))
v_el <- as_tibble(v_el)
v_el$vowel <- mu[i,]$vowel
el <- rbind(el, v_el)
}
graph <- ggplot()
cov <- cov %>%
select('vowel', 'f1-f1', 'f1-f2', 'f2-f1', 'f2-f2')
el = c()
for (i in 1:nrow(mu)) {
cov_vals <- matrix(as.numeric(cov[i, 2:ncol(cov)]), ncol=2)
v_el <- ellipse(cov_vals, centre=matrix(mu[i,] %>% select('f1', 'f2') %>% as.numeric))
v_el <- as_tibble(v_el)
v_el$vowel <- mu[i,]$vowel
el <- rbind(el, v_el)
}
el
900/5
el[el$vowel == 'iy',]
graph <- graph + geom_point(data=el, aes(x=y, y=x, color=vowel))
graph <- ggplot()
graph <- graph + geom_point(data=el, aes(x=y, y=x, color=vowel))
graph +
geom_label(data=mu, aes(x=f2, y=f1, label=vowel, color=vowel)) +
scale_x_reverse() +
scale_y_reverse()
setwd('C:/Users/conno/Dropbox/ling/vowel_learning_project/Code/vowel_learners/training_data/distributions')
en_train_ads_mu <- read_csv('english_train_ads_mu.csv')
en_train_ads_cov <- read_csv('english_train_ads_cov.csv')
plot_distributions(en_train_ads_mu, en_train_ads_cov)
ggsave('../../figures/en_train_ads_distributions.png')
plot_distributions <- function(mu, cov) {
ggplot(data=mu, aes(x=f2, y=f1, label=vowel)) +
scale_x_reverse() +
scale_y_reverse() +
geom_text()
graph <- ggplot()
cov <- cov %>%
select('vowel', 'f1-f1', 'f1-f2', 'f2-f1', 'f2-f2')
el = c()
for (i in 1:nrow(mu)) {
cov_vals <- matrix(as.numeric(cov[i, 2:ncol(cov)]), ncol=2)
v_el <- ellipse(cov_vals, centre=matrix(mu[i,] %>% select('f1', 'f2') %>% as.numeric))
v_el <- as_tibble(v_el)
v_el$vowel <- mu[i,]$vowel
el <- rbind(el, v_el)
}
graph <- graph + geom_point(data=el, aes(x=y, y=x, color=vowel))
graph +
geom_label(data=mu, aes(x=f2, y=f1, label=vowel, color=vowel)) +
scale_x_reverse() +
scale_y_reverse()
}
setwd('C:/Users/conno/Dropbox/ling/vowel_learning_project/Code/vowel_learners/training_data/distributions')
en_train_ads_mu <- read_csv('english_train_ads_mu.csv')
en_train_ads_cov <- read_csv('english_train_ads_cov.csv')
plot_distributions(en_train_ads_mu, en_train_ads_cov)
ggsave('../../figures/en_train_ads_distributions.png')
setwd('C:/Users/conno/Dropbox/ling/vowel_learning_project/Code/vowel_learners/training_data/distributions')
en_train_ads_mu <- read_csv('english_train_ads_mu.csv')
en_train_ads_cov <- read_csv('english_train_ads_cov.csv')
plot_distributions(en_train_ads_mu, en_train_ads_cov)
ggsave('../../figures/en_train_ads_distributions.png')
setwd('C:/Users/conno/Dropbox/ling/vowel_learning_project/Code/vowel_learners/training_data/distributions')
en_train_ads_mu <- read_csv('english_train_ads_mu.csv')
en_train_ads_cov <- read_csv('english_train_ads_cov.csv')
plot_distributions(en_train_ads_mu, en_train_ads_cov)
ggsave('../../figures/en_train_ads_distributions.png')
en_train_cds_mu <- read_csv('english_train_cds_mu.csv')
en_train_cds_cov <- read_csv('english_train_cds_cov.csv')
plot_distributions(en_train_cds_mu, en_train_cds_cov)
ggsave('../../figures/en_train_cds_distributions.png')
sp_train_ads_mu <- read_csv('spanish_train_ads_mu.csv')
sp_train_ads_cov <- read_csv('spanish_train_ads_cov.csv')
plot_distributions(sp_train_ads_mu, sp_train_ads_cov)
ggsave('../../figures/sp_train_ads_distributions.png')
sp_train_cds_mu <- read_csv('spanish_train_cds_mu.csv')
sp_train_cds_cov <- read_csv('spanish_train_cds_cov.csv')
plot_distributions(sp_train_cds_mu, sp_train_cds_cov)
ggsave('../../figures/sp_train_cds_distributions.png')
49 **2
49^2
sp_train_ads_cov
49^2
View(sp_train_ads)
library(tidyverse)
file <- 'training_data/hillenbrand_childes/hillenbrand_tidy_full.csv'
setwd('C:/Users/conno/Dropbox/ling/vowel_learning_project/Code/vowel_learners/')
file <- 'training_data/hillenbrand_childes/hillenbrand_tidy_full.csv'
hb <- read_csv(file)
ggplot(data=hb, aes(y=F2, x=F1)) +
geom_point()
ggplot(data=hb, aes(x=F1, y=F2)) +
geom_point()
ggplot(data=hb, aes(x=F2, y=F1)) +
geom_point()
ggplot(data=hb, aes(x=F2, y=F1)) +
geom_point() +
scale_x_reverse() +
scale_y_reverse()
hb <- hb %>%
filter(F1 != 0 & F2 != 0)
ggplot(data=hb, aes(x=F2, y=F1)) +
geom_point() +
scale_x_reverse() +
scale_y_reverse()
hb
ggplot(data=hb, aes(x=F2, y=F1)) +
geom_point() +
scale_x_reverse() +
scale_y_reverse() +
stat_ellipse()
ggplot(data=hb, aes(x=F2, y=F1, group=vowel)) +
geom_point() +
scale_x_reverse() +
scale_y_reverse() +
stat_ellipse()
hb
ggplot(data=hb, aes(x=F2, y=F1, group=Vowel)) +
geom_point() +
scale_x_reverse() +
scale_y_reverse() +
stat_ellipse()
ggplot(data=hb, aes(x=F2, y=F1, group=Vowel, color=Vowel)) +
geom_point() +
scale_x_reverse() +
scale_y_reverse() +
stat_ellipse()
ggplot(data=hb, aes(x=F2, y=F1, group=Vowel, color=Vowel)) +
geom_point() +
scale_x_reverse() +
scale_y_reverse() +
stat_ellipse() +
geom_label()
ggplot(data=hb, aes(x=F2, y=F1, group=Vowel, color=Vowel, label=Vowel)) +
geom_point() +
scale_x_reverse() +
scale_y_reverse() +
stat_ellipse() +
geom_label()
ggplot(data=hb, aes(x=F2, y=F1, group=Vowel, color=Vowel, label=Vowel)) +
#geom_point() +
scale_x_reverse() +
scale_y_reverse() +
stat_ellipse() +
geom_label()
ggplot(data=hb, aes(x=F2, y=F1, group=Vowel, color=Vowel, label=Vowel)) +
scale_x_reverse() +
scale_y_reverse() +
stat_ellipse()
ggplot(data=hb, aes(x=F2, y=F1, group=Vowel, color=Vowel, label=Vowel)) +
scale_x_reverse() +
scale_y_reverse() +
stat_ellipse(lwd=10)
ggplot(data=hb, aes(x=F2, y=F1, group=Vowel, color=Vowel, label=Vowel)) +
scale_x_reverse() +
scale_y_reverse() +
stat_ellipse(lwd=5)
ggplot(data=hb, aes(x=F2, y=F1, group=Vowel, color=Vowel, label=Vowel)) +
scale_x_reverse() +
scale_y_reverse() +
stat_ellipse(lwd=4)
ggplot(data=hb, aes(x=F2, y=F1, group=Vowel, color=Vowel, label=Vowel)) +
scale_x_reverse() +
scale_y_reverse() +
stat_ellipse(lwd=3)
graph <- graph + geom_point(data=el, aes(x=y, y=x, color=vowel), size=3)
graph +
geom_label(data=mu, aes(x=f2, y=f1, label=vowel, color=vowel)) +
scale_x_reverse() +
scale_y_reverse()
graph +
geom_label(data=mu, aes(x=f2, y=f1, label=vowel, color=vowel)) +
scale_x_reverse() +
scale_y_reverse() +
xlab("F2") +
ylab("F1") +
ggtitle("Hillenbrand data")
graph +
geom_label(data=mu, aes(x=f2, y=f1, label=vowel, color=vowel)) +
scale_x_reverse() +
scale_y_reverse() +
xlab("F2") +
ylab("F1") +
ggtitle("Hillenbrand data") +
theme(legend.position="none")
graph +
geom_label(data=mu, aes(x=f2, y=f1, label=vowel, color=vowel)) +
scale_x_reverse() +
scale_y_reverse() +
xlab("F2") +
ylab("F1") +
theme(legend.position="none")
plot_distributions <- function(mu, cov) {
ggplot(data=mu, aes(x=f2, y=f1, label=vowel)) +
scale_x_reverse() +
scale_y_reverse() +
geom_text()
graph <- ggplot()
cov <- cov %>%
select('vowel', 'f1-f1', 'f1-f2', 'f2-f1', 'f2-f2')
el = c()
for (i in 1:nrow(mu)) {
cov_vals <- matrix(as.numeric(cov[i, 2:ncol(cov)]), ncol=2)
v_el <- ellipse(cov_vals, centre=matrix(mu[i,] %>% select('f1', 'f2') %>% as.numeric))
v_el <- as_tibble(v_el)
v_el$vowel <- mu[i,]$vowel
el <- rbind(el, v_el)
}
graph <- graph + geom_point(data=el, aes(x=y, y=x, color=vowel), size=3)
graph +
geom_label(data=mu, aes(x=f2, y=f1, label=vowel, color=vowel)) +
scale_x_reverse() +
scale_y_reverse() +
xlab("F2") +
ylab("F1") +
theme(legend.position="none")
}
library(ellipse)
library(tidyverse)
plot_distributions <- function(mu, cov) {
ggplot(data=mu, aes(x=f2, y=f1, label=vowel)) +
scale_x_reverse() +
scale_y_reverse() +
geom_text()
graph <- ggplot()
cov <- cov %>%
select('vowel', 'f1-f1', 'f1-f2', 'f2-f1', 'f2-f2')
el = c()
for (i in 1:nrow(mu)) {
cov_vals <- matrix(as.numeric(cov[i, 2:ncol(cov)]), ncol=2)
v_el <- ellipse(cov_vals, centre=matrix(mu[i,] %>% select('f1', 'f2') %>% as.numeric))
v_el <- as_tibble(v_el)
v_el$vowel <- mu[i,]$vowel
el <- rbind(el, v_el)
}
graph <- graph + geom_point(data=el, aes(x=y, y=x, color=vowel), size=3)
graph +
geom_label(data=mu, aes(x=f2, y=f1, label=vowel, color=vowel)) +
scale_x_reverse() +
scale_y_reverse() +
xlab("F2") +
ylab("F1") +
theme(legend.position="none")
}
setwd('C:/Users/conno/Dropbox/ling/vowel_learning_project/Code/vowel_learners/training_data/distributions')
en_train_ads_mu <- read_csv('english_train_ads_mu.csv')
en_train_ads_cov <- read_csv('english_train_ads_cov.csv')
plot_distributions(en_train_ads_mu, en_train_ads_cov)
ggsave('../../figures/en_train_ads_distributions.png')
en_train_cds_mu <- read_csv('english_train_cds_mu.csv')
en_train_cds_cov <- read_csv('english_train_cds_cov.csv')
plot_distributions(en_train_cds_mu, en_train_cds_cov)
ggsave('../../figures/en_train_cds_distributions.png')
sp_train_ads_mu <- read_csv('spanish_train_ads_mu.csv')
sp_train_ads_cov <- read_csv('spanish_train_ads_cov.csv')
plot_distributions(sp_train_ads_mu, sp_train_ads_cov)
ggsave('../../figures/sp_train_ads_distributions.png')
sp_train_cds_mu <- read_csv('spanish_train_cds_mu.csv')
sp_train_cds_cov <- read_csv('spanish_train_cds_cov.csv')
plot_distributions(sp_train_cds_mu, sp_train_cds_cov)
ggsave('../../figures/sp_train_cds_distributions.png')
library(ellipse)
library(tidyverse)
plot_distributions <- function(mu, cov) {
ggplot(data=mu, aes(x=f2, y=f1, label=vowel)) +
scale_x_reverse() +
scale_y_reverse() +
geom_text()
graph <- ggplot()
cov <- cov %>%
select('vowel', 'f1-f1', 'f1-f2', 'f2-f1', 'f2-f2')
el = c()
for (i in 1:nrow(mu)) {
cov_vals <- matrix(as.numeric(cov[i, 2:ncol(cov)]), ncol=2)
v_el <- ellipse(cov_vals, centre=matrix(mu[i,] %>% select('f1', 'f2') %>% as.numeric))
v_el <- as_tibble(v_el)
v_el$vowel <- mu[i,]$vowel
el <- rbind(el, v_el)
}
graph <- graph + geom_point(data=el, aes(x=y, y=x, color=vowel), size=3)
graph +
geom_label(data=mu, aes(x=f2, y=f1, label=vowel, color=vowel)) +
scale_x_reverse() +
scale_y_reverse() +
xlab("F2") +
ylab("F1") +
theme(legend.position="none")
}
setwd('C:/Users/conno/Dropbox/ling/vowel_learning_project/Code/vowel_learners/training_data/distributions')
en_train_ads_mu <- read_csv('english_train_ads_mu.csv')
en_train_ads_cov <- read_csv('english_train_ads_cov.csv')
plot_distributions(en_train_ads_mu, en_train_ads_cov)
ggsave('../../figures/en_train_ads_distributions.png')
en_train_cds_mu <- read_csv('english_train_cds_mu.csv')
en_train_cds_cov <- read_csv('english_train_cds_cov.csv')
plot_distributions(en_train_cds_mu, en_train_cds_cov)
ggsave('../../figures/en_train_cds_distributions.png')
sp_train_ads_mu <- read_csv('spanish_train_ads_mu.csv')
sp_train_ads_cov <- read_csv('spanish_train_ads_cov.csv')
plot_distributions(sp_train_ads_mu, sp_train_ads_cov)
ggsave('../../figures/sp_train_ads_distributions.png')
sp_train_cds_mu <- read_csv('spanish_train_cds_mu.csv')
sp_train_cds_cov <- read_csv('spanish_train_cds_cov.csv')
plot_distributions(sp_train_cds_mu, sp_train_cds_cov)
ggsave('../../figures/sp_train_cds_distributions.png')
ggplot(data=hb, aes(x=F2, y=F1, group=Vowel, color=Vowel, label=Vowel)) +
scale_x_reverse() +
scale_y_reverse() +
stat_ellipse(lwd=3) +
xlab("F2") +
ylab("F1")
ggsave("figures/hillenbrand_vowels.png")
library(tidyverse)
setwd('C:/Users/conno/Dropbox/ling/vowel_learning_project/Code/vowel_learners/')
file <- 'training_data/hillenbrand_childes/hillenbrand_tidy_full.csv'
hb <- read_csv(file)
hb <- hb %>%
filter(F1 != 0 & F2 != 0)
ggplot(data=hb, aes(x=F2, y=F1, group=Vowel, color=Vowel, label=Vowel)) +
scale_x_reverse() +
scale_y_reverse() +
stat_ellipse(lwd=3) +
xlab("F2") +
ylab("F1")
ggsave("figures/hillenbrand_vowels.png")
en_ads
en_ads %>% filter(vowel='uw') %>% range
en_ads %>% filter(vowel=='uw') %>% range
bar <- en_ads %>% filter(vowel=='uw')
range(bar$f1)
range(bar$f2)
hb
hb_ave <- hb %>%
group_by(vowel) %>%
summarize(f2=mean(f2), f1=mean(f1))
hb_ave <- hb %>%
group_by(Vowel) %>%
summarize(F2=mean(F2), F1=mean(F1))
hb_ave
myplot + geom_label(data=hb_ave, aes(x=f2, y=f1, label=Vowel, color=Vowel))
my_plot <- ggplot(data=hb, aes(x=F2, y=F1, group=Vowel, color=Vowel, label=Vowel)) +
scale_x_reverse() +
scale_y_reverse() +
stat_ellipse(lwd=3) +
xlab("F2") +
ylab("F1")
myplot + geom_label(data=hb_ave, aes(x=f2, y=f1, label=Vowel, color=Vowel))
my_plot + geom_label(data=hb_ave, aes(x=f2, y=f1, label=Vowel, color=Vowel))
my_plot + geom_label(data=hb_ave, aes(x=F2, y=F1, label=Vowel, color=Vowel))
hb_ave <- hb %>%
group_by(Vowel) %>%
summarize(F2=mean(F2), F1=mean(F1)) +
theme(legend.position="none")
my_plot <- ggplot(data=hb, aes(x=F2, y=F1, group=Vowel, color=Vowel, label=Vowel)) +
scale_x_reverse() +
scale_y_reverse() +
stat_ellipse(lwd=3) +
xlab("F2") +
ylab("F1")
hb_ave <- hb %>%
group_by(Vowel) %>%
summarize(F2=mean(F2), F1=mean(F1)) +
theme(legend.position="none")
my_plot +
geom_label(data=hb_ave, aes(x=F2, y=F1, label=Vowel, color=Vowel)) +
theme(legend.position="none")
ggsave("figures/hillenbrand_vowels.png")
hb
unique(hb$Speaker)
en_test_ads_mu <- read_csv('english_test_ads_mu.csv')
en_test_ads_cov <- read_csv('english_test_ads_cov.csv')
plot_distributions(en_test_ads_mu, en_test_ads_cov)
ggsave('../../figures/en_test_ads_distributions.png')
en_test_ads_mu <- read_csv('english_test_ads_mu.csv')
en_test_ads_cov <- read_csv('english_test_ads_cov.csv')
plot_distributions(en_test_ads_mu, en_test_ads_cov)
ggsave('../../figures/en_test_ads_distributions.png')
setwd('C:/Users/conno/Dropbox/ling/vowel_learning_project/Code/vowel_learners/training_data/distributions')
en_train_ads_mu <- read_csv('english_train_ads_mu.csv')
en_train_ads_cov <- read_csv('english_train_ads_cov.csv')
plot_distributions(en_train_ads_mu, en_train_ads_cov)
ggsave('../../figures/en_train_ads_distributions.png')
en_test_ads_mu <- read_csv('english_test_ads_mu.csv')
en_test_ads_cov <- read_csv('english_test_ads_cov.csv')
plot_distributions(en_test_ads_mu, en_test_ads_cov)
ggsave('../../figures/en_test_ads_distributions.png')
sp_test_ads_mu <- read_csv('spanish_test_ads_mu.csv')
sp_test_ads_cov <- read_csv('spanish_test_ads_cov.csv')
plot_distributions(sp_test_ads_mu, sp_test_ads_cov)
ggsave('../../figures/sp_test_ads_distributions.png')
# The top values look a bit extreme. Let's look at a histogram.
ggplot(vot_data) +
geom_histogram(aes(x=vot))
# We've looked at graphs that apply certain statistical transformations to
# our data. We often want to apply similar transformations ourselves to
# datasets we've collected. These transformations can include
# - Creating a new dataset by aggregating an existing one
# - Adding new columns based on values in existing columns
# - Removing rows with certain values
# The kinds of transformations are very easy to do using the tidyverse package
# dplyr. We'll use a dataset from Omar
# install.packages("devtools")
# devtools::install_github("jvcasillas/untidydata")
# library(untidydata)
library(tidyverse)
# We're going to use a dataset looking at VOT from Joseph Casillas' untidydata
# package that contains VOT measurements generated based on measurements from
#
# Casillas, J. V., Diaz, Y. and Simonet, M. (2015). "Acoustics of Spanish and
# English coronal stops". In ICPhS 18. Ed. by T. S. C. for ICPhS 2015.
# Proceedings of the 18th International Congress of Phonetic Sciences.
# University of Glasgow: Glasgow. http://www.icphs2015.info, ISSN: 241-0669,
# pp. 1-5.
# These measurements were sampled from probability distributions calculated from
# acoustic measurements (so they're not real data, but they're distributed
# like real data.
# Let's look at the data
url <- "http://socsci.uci.edu/~cjmayer/LSCI_202A/vot_data.csv"
vot_data <- read_csv(url)
vot_data_original <- vot_data
# This data isn't arranged very well. Certain columns combine information in
# a way that makes analysis tricky. What are some of the issues?
# We can fix this with the five dplyr functions arrange, filter, select,
# mutate, summarise (along with the special function group_by).
# These five functions have a similar format.
# - First argument is a dataframe
# - Remaining arguments tell the function what to do with the data
# - Return value is a new dataframe (tibble)
###########
# ARRANGE #
###########
# In practice this is probably the least useful of these functions.
# You can use it to sort a dataset by one or more columns
# Let's sort by VOT
arrange(vot_data, vot)
# You can sort in descending order using desc()
arrange(vot_data, desc(vot))
# The top values look a bit extreme. Let's look at a histogram.
ggplot(vot_data) +
geom_histogram(aes(x=vot))
View(sp_train_cds_mu)
library(tidyverse)
my_data <- read_csv("http://socsci.uci.edu/~cjmayer/LSCI_202A/hillenbrand_tidy.csv")
my_data
mean
unique(my_data$Vowel)
mean(1,2,3)
mean(c(1,2,3))
ggplot(my_data, aes(x=F2, y=F1, color=Vowel)) +
geom_point()
ggplot(my_data, aes(x=F2, y=F1, color=Vowel)) +
geom_point() +
scale_y_reverse() +
scale_x_reverse()
ggplot(my_data, aes(x=F2, y=F1, color=Vowel)) +
geom_point(size=3) +
scale_y_reverse() +
scale_x_reverse()
